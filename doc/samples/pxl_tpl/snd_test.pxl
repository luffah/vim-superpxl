"{{
  call render#Dj_playAnimation(expand('<sfile>'))
  finish
  " License is CC-0 public domain
  " snd test require sox
  " and speech-dispatcher
"}}
0..\SOUND TEST\...
"{{
command -buffer -nargs=* Snd call system('play -n synth .4 sine '.eval(<q-args>).' gain -8 fade 0 .4 .1 &')
command -buffer -nargs=* Say call system('spd-say -l '.strpart(expand("$LANG"),0,2).' "'.shellescape(eval(<q-args>)).'" &')
let l:freq=220
resize 1
echo "q -> quit ; Arrows -> beep; * -> say char; hello -> ?"  
while 1
  let l:ch=getchar(0)
  if !empty(l:ch)
    if l:ch == "\<Left>"
      let l:freq=l:freq<30?44:(l:freq*3/5)%8000
      Snd l:freq
    elseif l:ch == "\<Right>"
      let l:freq=(l:freq*5/3)%8000
      Snd l:freq
    elseif l:ch == "\<Up>"
      let l:freq=(l:freq*9/8)%8000
      Snd l:freq
    elseif l:ch == "\<Down>"
      let l:freq=l:freq<30?56:(l:freq*8/9)%8000
      Snd l:freq
    elseif l:ch == 13
      Snd l:freq
    else 
      let l:chstr = nr2char(l:ch)
      
      let l:chlive=nr2char(bot#getCharSync(50,3))
      while !empty(l:chlive)
         let l:chstr.=l:chlive
         let l:chlive=bot#getCharSync(50,10)
         if l:chlive==13
          Snd l:freq
          Say l:chstr
          let l:chstr=''
          let l:chlive=' '
         else
          if l:chlive==32 || l:chlive==9
            Say l:chstr
            let l:chstr=''
            let l:chlive=' '
          else
            let l:chlive=nr2char(l:chlive)
          endif
         endif
      endwhile
      
      if l:chstr == 'q'
        break
      else
        Say l:chstr
      endif
    endif
  endif
  sleep 125ms
endwhile
" Quit
q
" vim : commentstring="%s : comments=sO:\"\ -,mO:\"\ \ ,eO:\"\",:\"
"}}
